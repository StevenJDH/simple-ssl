name: 'publish maven package'

on:
  release:
    types: [created]

env:
  MAVEN_CLI_OPTS: --batch-mode --errors --fail-at-end --show-version -Dstyle.color=always
  # This will suppress any downloads for dependencies and plugins or upload messages that would clutter the console log.
  # Opting for this approach because --no-transfer-progress or -ntp may be suppressing even warning and error messages.
  # TODO: Remove nexus-staging-maven-plugin workaround (--add-opens) after OSSRH-66257, NEXUS-26993 are fixed, possibly via https://github.com/sonatype/nexus-maven-plugins/pull/91
  MAVEN_OPTS: "-Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.text=ALL-UNNAMED --add-opens=java.desktop/java.awt.font=ALL-UNNAMED"

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v3

      - name: Install Temurin OpenJDK
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'temurin'
          architecture: x64

      - name: Build with Maven
        run: chmod +x ./mvnw && ./mvnw $MAVEN_CLI_OPTS package

      - name: Publish to GitHub Packages
        run: ./mvnw $MAVEN_CLI_OPTS -DskipTests deploy -Pgithub
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Running again to overwrite previous settings.xml used by GitHub Packages.
      - name: Set up Apache Maven Central
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'temurin'
          architecture: x64
          # Matches pom.xml field for distributionManagement/repository/id.
          server-id: ossrh
          # env variable for username in deploy.
          server-username: OSSRH_USERNAME
          # env variable for token in deploy.
          server-password: OSSRH_TOKEN
          # Value of the GPG private key to import.
          gpg-private-key: ${{ secrets.MAVEN_GPG_PRIVATE_KEY }}
          # env variable for GPG private key passphrase.
          gpg-passphrase: MAVEN_GPG_PASSPHRASE

      - name: Publish to Apache Maven Central
        run: ./mvnw $MAVEN_CLI_OPTS -DskipTests deploy -Dgpg.passphrase=${{ secrets.GPG_PASSPHRASE }} -Psonatype
        env:
          OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          OSSRH_TOKEN: ${{ secrets.OSSRH_TOKEN }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}